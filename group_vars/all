---
ansible_connection: ssh
ansible_user: root
ansible_ssh_extra_args: '-o StrictHostKeyChecking=no'
ansible_ssh_private_key_file: "{{ ssh_private_key }}"

ssh_private_key: "~/.ssh/id_rsa"

#Redhat Subscription with username and password
username: <username>
password: <password>

# kubeconfig on the local machine where kubeconfig content will be copied from the remote machine
kubeconfig_path: kubeconfig

##### Runtime Configurations #####
# valid runtimes: docker, containerd
runtime: docker
cgroup_driver: systemd
MTU: 9000
# additional docker mirrors to avoid the flood to the hub.docker.com
registry_mirrors:
  - https://mirror.gcr.io
  - https://registry-1.docker.io

##### Kubernetes Configurations #####
apiserver_port: 992
cluster_name: "k8s-cluster-1"
powervs_dns_zone: "k8s.test"
extra_cert: "{{ cluster_name }}-master.{{ powervs_dns_zone }}"
# https://github.com/kubernetes/kubernetes/blob/66334f02e8c520df7973c397246da82cd4db2769/cmd/kubeadm/app/util/version_test.go#L193:L199 for more information
release_marker: ci/latest
bootstrap_token: abcdef.0123456789abcdef
kubelet_extra_args: ""

# in the format of: https://storage.googleapis.com/{{ bucket }}/{{ directory }}/{{ build_version }}/kubernetes-client-linux-ppc64le.tar.gz
# used for downloading the kubernetes bits
# GCS web: https://gcsweb.k8s.io/gcs/kubernetes-release-dev/ci/
s3_server: storage.googleapis.com
bucket: k8s-release-dev
directory: ci
build_version: v1.20.0-alpha.0.1402+d39214ade1d60c

# For IBM s3 bucket:
# https://s3.us-south.cloud-object-storage.appdomain.cloud/ci-builds/kubernetes/master/golang/master/d39214ade1d60c/kubernetes-client-linux-ppc64le.tar.gz
#
# s3_server: s3.us-south.cloud-object-storage.appdomain.cloud
# bucket: ci-builds
# directory: kubernetes/master/golang/master
# build_version: d39214ade1d60c
