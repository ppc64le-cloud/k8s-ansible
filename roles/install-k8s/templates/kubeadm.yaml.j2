apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
bootstrapTokens:
- groups:
  - system:bootstrappers:kubeadm:default-node-token
  token: {{ bootstrap_token }}
  ttl: 24h0m0s
  usages:
  - signing
  - authentication
localAPIEndpoint:
  bindPort: {{ apiserver_port }}
nodeRegistration:
{% if (runtime is defined) and 'containerd' == runtime %}
  criSocket: "unix:///run/containerd/containerd.sock"
{% elif (runtime is defined) and 'crio' == runtime %}
  criSocket: "unix:///run/crio/crio.sock"
{% endif %}
  kubeletExtraArgs:
    cgroup-driver: {{ cgroup_driver }}
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
networking:
  serviceSubnet: "10.96.0.0/12"
  podSubnet: "{{ pod_subnet }}"
  dnsDomain: "cluster.local"
kubernetesVersion: "{{ release_marker }}"
{% if (loadbalancer is defined) and '' != loadbalancer %}
controlPlaneEndpoint: "{{ loadbalancer }}:{{ apiserver_port }}"
{% endif %}
apiServer:
  timeoutForControlPlane: 4m0s
{% if (extra_cert is defined) and extra_cert %}
  certSANs:
{% set list1 = extra_cert.split(',') %}
{% for item in list1 %}
    - {{ item }}
{% endfor %}
{% endif %}
# The default bind address for the controllerManager and the Scheduler is set to 127.0.0.1
# To access the /metrics endpoint on kube-scheduler, the bind address is set to 0.0.0.0
controllerManager:
  extraArgs:
    bind-address: "0.0.0.0"
scheduler:
  extraArgs:
    bind-address: "0.0.0.0"
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
cgroupDriver: {{ cgroup_driver }}
{% if (runtime is defined) and 'containerd' == runtime %}
containerRuntimeEndpoint: "unix:///run/containerd/containerd.sock"
{% elif (runtime is defined) and 'crio' == runtime %}
containerRuntimeEndpoint: "unix:///run/crio/crio.sock"
{% endif %}
{% if (swap_enabled is defined) and swap_enabled %}
failSwapOn: false
featureGates:
  NodeSwap: true
memorySwap:
  swapBehavior: LimitedSwap
{% endif %}
---
apiVersion: kubeadm.k8s.io/v1beta3
caCertPath: /etc/kubernetes/pki/ca.crt
discovery:
  bootstrapToken:
    token: {{ bootstrap_token }}
    unsafeSkipCAVerification: true
  timeout: 5m0s
  tlsBootstrapToken: {{ bootstrap_token }}
kind: JoinConfiguration
nodeRegistration:
{% if (runtime is defined) and 'containerd' == runtime %}
  criSocket: "unix:///run/containerd/containerd.sock"
{% elif (runtime is defined) and 'crio' == runtime %}
  criSocket: "unix:///run/crio/crio.sock"
{% endif %}
