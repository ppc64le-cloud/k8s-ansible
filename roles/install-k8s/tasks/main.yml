- name: Disable SWAP since kubernetes can't work with swap enabled (1/2)
  shell: |
    swapoff -a

- name: Disable SWAP in fstab since kubernetes can't work with swap enabled (2/2)
  replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'

- name: Install prereq packages
  yum:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - conntrack-tools
      - socat
      - tc
      - iptables

- name: Template a kubelet service to /usr/lib/systemd/system/kubelet.service
  template:
    src: kubelet.service.j2
    dest: /usr/lib/systemd/system/kubelet.service
    mode: '0644'

- name: Enable and start kubelet
  systemd:
    name: kubelet
    state: restarted
    enabled: yes

- name: Generate kubeadm.yaml
  template:
    src: kubeadm.yaml.j2
    dest: /root/kubeadm.yaml
    mode: '0644'

- name: kubeadm init
  command: "kubeadm init --config /root/kubeadm.yaml"
  when: node_type == "master"

- name: Create a directory ${HOME}/.kube if it does not exist
  file:
    path: ${HOME}/.kube/
    state: directory
    mode: '0755'

- name: Copy the /etc/kubernetes/admin.conf to ${HOME}/.kube/config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: ${HOME}/.kube/config
    remote_src: yes
  when: node_type == "master"

- name: Copy the /etc/kubernetes/admin.conf to local machine(path - {{ kubeconfig_path }})
  fetch:
    src: /etc/kubernetes/admin.conf
    dest: "{{ kubeconfig_path }}"
    flat: yes
  when: node_type == "master"

- name: remove taint
  command: "kubectl taint nodes --all node-role.kubernetes.io/master-"
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  when: node_type == "master" and not ('workers' in groups and groups['workers'])

- name: Get the kubeadm join command from the Kubernetes master.
  command: kubeadm token create --print-join-command
  changed_when: false
  when: node_type == "master"
  register: kubernetes_join_command_result

- name: Set the kubeadm join command globally.
  set_fact:
    kubernetes_join_command: >
      {{ kubernetes_join_command_result.stdout }}
  when: kubernetes_join_command_result.stdout is defined
  delegate_to: "{{ item }}"
  delegate_facts: true
  with_items: "{{ groups['all'] }}"

- name: kubeadm join
  command: "{{ kubernetes_join_command }} {% if (runtime is defined) and 'containerd' == runtime %}--cri-socket /run/containerd/containerd.sock{% endif %}"
  when: node_type == "worker"
